package data;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class PatientList extends ArrayList<Patient> {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	//Default constructor
	public PatientList(){

	}

	//Constructor with CSV file location to read in
	public PatientList(String fileLoc){
        // The name of the file to open.
        String fileName = fileLoc;

        // This will reference one line at a time
        String line = null;

        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(fileName);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((line = bufferedReader.readLine()) != null) {
                System.out.println(line);
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                  
            // Or we could just do this: 
            // ex.printStackTrace();
        }
//        
//		File file = new File(fileLoc);
//		
//		try{
//			Scanner scanner = new Scanner(file);
//			scanner.nextLine(); //first two lines are useless in file
//			scanner.nextLine();
//			while(scanner.hasNextLine()){
//				String[] info = scanner.nextLine().split(","); //split based on comma separation
//				this.add(new Patient(info)); 
//
//				if(scanner.hasNextLine()){ //skips ",,,,,,,,,,,,," lines between each entry
//					scanner.nextLine();
//				}
//
//			}
//			//System.out.println(this);
//
//		} catch (Exception e){
//			System.out.println(e);
//		}
	}

	//returns the yth info of xth patient
	public String get(int x, int y){
	//	if(x < numRows() && y < numCols()){
			return this.get(x).get(y);
	//	} else {
//			throw new IndexOutOfBoundsException();
//		}
	}

	//returns patient full name
	public String getName(int n){ 
		return this.get(n).getName();
	}

	//number of rows
	public int numRows(){
		return this.size();
	}

	//returns all indexes of nth patient
	public ArrayList<String> getRow(int n){ 
	//	if (n < this.size()){
			return this.get(n).get();
//		} else {
	//		throw new IndexOutOfBoundsException();
//		}
	}

	//number of columns
	public int numCols(){
		return this.get(0).size();
	}

	//creates a new ArrayList with every nth index of each patient
	public ArrayList<String> getColumn(int n){
		ArrayList<String> column = new ArrayList<String>();
	//	if(n < this.numCols()){
			for(Patient patient: this){
				column.add(patient.get(n));
			}
	//	} else {
	//		throw new IndexOutOfBoundsException();
	//	}
		return column;
	}

	//toString
	public String toString(){
		String res = "";
		for (Patient patient: this){
			res += patient.toString() + "\n";
		}
		return res;
	}

}
